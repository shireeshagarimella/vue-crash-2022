{"remainingRequest":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/babel-loader/lib/index.js!/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/dell/Desktop/vue_learning/vue-crash-2021/src/views/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/src/views/Home.vue","mtime":1648456236422},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/babel.config.js","mtime":1648206260341},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvZGVsbC9EZXNrdG9wL3Z1ZV9sZWFybmluZy92dWUtY3Jhc2gtMjAyMS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL2hvbWUvZGVsbC9EZXNrdG9wL3Z1ZV9sZWFybmluZy92dWUtY3Jhc2gtMjAyMS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvZGVsbC9EZXNrdG9wL3Z1ZV9sZWFybmluZy92dWUtY3Jhc2gtMjAyMS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0IFRhc2tzIGZyb20gJy4uL2NvbXBvbmVudHMvVGFza3MnOwppbXBvcnQgQWRkVGFzayBmcm9tICcuLi9jb21wb25lbnRzL0FkZFRhc2snOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hvbWUnLAogIHByb3BzOiB7CiAgICBzaG93QWRkVGFzazogQm9vbGVhbgogIH0sCiAgY29tcG9uZW50czogewogICAgVGFza3M6IFRhc2tzLAogICAgQWRkVGFzazogQWRkVGFzawogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhc2tzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZFRhc2s6IGZ1bmN0aW9uIGFkZFRhc2sodGFzaykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzLCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCdhcGkvdGFza3MnLCB7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh0YXNrKQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLnRhc2tzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShfdGhpcy50YXNrcyksIFtkYXRhXSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBkZWxldGVUYXNrOiBmdW5jdGlvbiBkZWxldGVUYXNrKGlkKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKCFjb25maXJtKCdBcmUgeW91IHN1cmU/JykpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goImFwaS90YXNrcy8iLmNvbmNhdChpZCksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgcmVzLnN0YXR1cyA9PT0gMjAwID8gX3RoaXMyLnRhc2tzID0gX3RoaXMyLnRhc2tzLmZpbHRlcihmdW5jdGlvbiAodGFzaykgewogICAgICAgICAgICAgICAgICByZXR1cm4gdGFzay5pZCAhPT0gaWQ7CiAgICAgICAgICAgICAgICB9KSA6IGFsZXJ0KCdFcnJvciBkZWxldGluZyB0YXNrJyk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHRvZ2dsZVJlbWluZGVyOiBmdW5jdGlvbiB0b2dnbGVSZW1pbmRlcihpZCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciB0YXNrVG9Ub2dnbGUsIHVwZFRhc2ssIHJlcywgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5mZXRjaFRhc2soaWQpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICB0YXNrVG9Ub2dnbGUgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIHVwZFRhc2sgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRhc2tUb1RvZ2dsZSksIHt9LCB7CiAgICAgICAgICAgICAgICAgIHJlbWluZGVyOiAhdGFza1RvVG9nZ2xlLnJlbWluZGVyCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiYXBpL3Rhc2tzLyIuY29uY2F0KGlkKSwgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQVVQnLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh1cGRUYXNrKQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzMy50YXNrcyA9IF90aGlzMy50YXNrcy5tYXAoZnVuY3Rpb24gKHRhc2spIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhc2suaWQgPT09IGlkID8gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0YXNrKSwge30sIHsKICAgICAgICAgICAgICAgICAgICByZW1pbmRlcjogZGF0YS5yZW1pbmRlcgogICAgICAgICAgICAgICAgICB9KSA6IHRhc2s7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGZldGNoVGFza3M6IGZ1bmN0aW9uIGZldGNoVGFza3MoKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciByZXMsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgnYXBpL3Rhc2tzJyk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCBkYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZmV0Y2hUYXNrOiBmdW5jdGlvbiBmZXRjaFRhc2soaWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgICAgdmFyIHJlcywgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJhcGkvdGFza3MvIi5jb25jYXQoaWQpKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNigpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC5mZXRjaFRhc2tzKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgX3RoaXM0LnRhc2tzID0gX2NvbnRleHQ2LnNlbnQ7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNik7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"mappings":"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","names":["Tasks","AddTask","name","props","showAddTask","Boolean","components","data","tasks","methods","addTask","task","fetch","method","headers","body","JSON","stringify","res","json","deleteTask","id","confirm","status","filter","alert","toggleReminder","fetchTask","taskToToggle","updTask","reminder","map","fetchTasks","created"],"sourceRoot":"","sources":["/home/dell/Desktop/vue_learning/vue-crash-2021/src/views/Home.vue"],"sourcesContent":["<template>\n  <AddTask v-show=\"showAddTask\" @add-task=\"addTask\" />\n  <Tasks \n    @toggle-reminder=\"toggleReminder\" \n    @delete-task=\"deleteTask\" \n    :tasks=\"tasks\" \n    />\n</template>\n\n<script>\nimport Tasks from '../components/Tasks'\nimport AddTask from '../components/AddTask'\n\nexport default {\n    name: 'Home',\n    props: {\n        showAddTask: Boolean,\n    },\n    components: {\n        Tasks,\n        AddTask,\n    },\n    data() {\n        return {\n            tasks: [],\n        }\n    },\n    methods: {\n    async addTask(task) {\n      const res = await fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task),\n      })\n      const data = await res.json()\n\n      this.tasks = [...this.tasks, data]\n    },\n    async deleteTask(id) {\n      if(confirm('Are you sure?')) {\n      const res = await fetch(`api/tasks/${id}`, {\n        method: 'DELETE'\n      })\n\n      res.status === 200 \n        ? (this.tasks = this.tasks.filter((task) => task.id !== id)) \n        : alert('Error deleting task')\n\n      }\n    },\n    async toggleReminder(id) {\n      const taskToToggle = await this.fetchTask(id)\n      const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n      const res =  await fetch(`api/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updTask)\n      })\n      const data =  await res.json()\n      this.tasks = this.tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    },\n    async fetchTasks() {\n      const res = await fetch('api/tasks')\n      const data = await res.json()\n      return data\n    },\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`)\n      const data = await res.json()\n      return data\n    },\n  },\n  async created() {\n    this.tasks = await this.fetchTasks()\n    // [\n    //   {\n    //     id: 1,\n    //     text: 'Doctors Appointment',\n    //     day: 'March 1st at 2:30pm',\n    //     reminder: true,\n    //   },\n    //   {\n    //     id: 2,\n    //     text: 'Meeting at School',\n    //     day: 'March 3rd at 1:30pm',\n    //     reminder: false,\n    //   },\n    //   {\n    //     id: 3,\n    //     text: 'Food Shopping',\n    //     day: 'March 3rd at 11:30am',\n    //     reminder: false,\n    //   },\n    // ]\n  },\n}\n</script>"]}]}