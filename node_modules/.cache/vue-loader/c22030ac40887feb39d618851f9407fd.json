{"remainingRequest":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/dell/Desktop/vue_learning/vue-crash-2021/src/views/Home.vue?vue&type=template&id=fae5bece","dependencies":[{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/src/views/Home.vue","mtime":1648456236422},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPEFkZFRhc2sgdi1zaG93PSJzaG93QWRkVGFzayIgQGFkZC10YXNrPSJhZGRUYXNrIiAvPgogIDxUYXNrcyAKICAgIEB0b2dnbGUtcmVtaW5kZXI9InRvZ2dsZVJlbWluZGVyIiAKICAgIEBkZWxldGUtdGFzaz0iZGVsZXRlVGFzayIgCiAgICA6dGFza3M9InRhc2tzIiAKICAgIC8+Cg=="},{"version":3,"sources":["/home/dell/Desktop/vue_learning/vue-crash-2021/src/views/Home.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACnD,CAAC,CAAC,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC","file":"/home/dell/Desktop/vue_learning/vue-crash-2021/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <AddTask v-show=\"showAddTask\" @add-task=\"addTask\" />\n  <Tasks \n    @toggle-reminder=\"toggleReminder\" \n    @delete-task=\"deleteTask\" \n    :tasks=\"tasks\" \n    />\n</template>\n\n<script>\nimport Tasks from '../components/Tasks'\nimport AddTask from '../components/AddTask'\n\nexport default {\n    name: 'Home',\n    props: {\n        showAddTask: Boolean,\n    },\n    components: {\n        Tasks,\n        AddTask,\n    },\n    data() {\n        return {\n            tasks: [],\n        }\n    },\n    methods: {\n    async addTask(task) {\n      const res = await fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task),\n      })\n      const data = await res.json()\n\n      this.tasks = [...this.tasks, data]\n    },\n    async deleteTask(id) {\n      if(confirm('Are you sure?')) {\n      const res = await fetch(`api/tasks/${id}`, {\n        method: 'DELETE'\n      })\n\n      res.status === 200 \n        ? (this.tasks = this.tasks.filter((task) => task.id !== id)) \n        : alert('Error deleting task')\n\n      }\n    },\n    async toggleReminder(id) {\n      const taskToToggle = await this.fetchTask(id)\n      const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n      const res =  await fetch(`api/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updTask)\n      })\n      const data =  await res.json()\n      this.tasks = this.tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    },\n    async fetchTasks() {\n      const res = await fetch('api/tasks')\n      const data = await res.json()\n      return data\n    },\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`)\n      const data = await res.json()\n      return data\n    },\n  },\n  async created() {\n    this.tasks = await this.fetchTasks()\n    // [\n    //   {\n    //     id: 1,\n    //     text: 'Doctors Appointment',\n    //     day: 'March 1st at 2:30pm',\n    //     reminder: true,\n    //   },\n    //   {\n    //     id: 2,\n    //     text: 'Meeting at School',\n    //     day: 'March 3rd at 1:30pm',\n    //     reminder: false,\n    //   },\n    //   {\n    //     id: 3,\n    //     text: 'Food Shopping',\n    //     day: 'March 3rd at 11:30am',\n    //     reminder: false,\n    //   },\n    // ]\n  },\n}\n</script>"]}]}