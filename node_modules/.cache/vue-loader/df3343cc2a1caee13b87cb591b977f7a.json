{"remainingRequest":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/dell/Desktop/vue_learning/vue-crash-2021/src/components/Header.vue?vue&type=style&index=0&id=61dd7a3d&scoped=true&lang=css","dependencies":[{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/src/components/Header.vue","mtime":1648214954899},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/css-loader/dist/cjs.js","mtime":1615085175713},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1641477660096},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/postcss-loader/src/index.js","mtime":1615085178208},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":1615085175182},{"path":"/home/dell/Desktop/vue_learning/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js","mtime":1641477660096}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBoZWFkZXIgewogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsKICAgIH0K"},{"version":3,"sources":["/home/dell/Desktop/vue_learning/vue-crash-2021/src/components/Header.vue"],"names":[],"mappings":";IA0BI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACvB","file":"/home/dell/Desktop/vue_learning/vue-crash-2021/src/components/Header.vue","sourceRoot":"","sourcesContent":["<template>\n    <header>\n        <h1>{{title}}</h1>\n        <Button @btn-click=\"$emit('toggle-add-task')\" \n        :text=\"showAddTask ? 'Close' : 'Add Task'\"\n        :color=\"showAddTask ? 'red' : 'green'\"/>\n        <!-- <Button text=\"Edit Task\" color=\"orange\"/>\n        <Button text=\"Delete Task\" color=\"red\"/> -->\n    </header>\n</template>\n\n<script>\nimport Button from './Button'\n    export default {\n        name: 'Header',\n        props: {\n            title: String,\n            showAddTask: Boolean,\n        },\n        components: {\n            Button\n        }\n    }\n</script>\n\n<style scoped>\n    header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 20px;\n    }\n</style>"]}]}